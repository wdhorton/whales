#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'
include FileUtils
require 'whales_orm'

options = {}

subtext = <<HELP
Commonly used command are:
   new :     creates new Whales app
   server :  start a Whales app server
See 'whales COMMAND --help' for more information on a specific command.
HELP

global = OptionParser.new do |opts|
  opts.banner = "Usage: whales [options] [subcommand [options]]"
  opts.on("-q", "--quiet", "Run verbosely") do
    options[:verbose] = false
  end
  opts.separator ""
  opts.separator subtext
end
# end.parse!

subcommands = {
  'new' => OptionParser.new do |opts|
    opts.banner = "Usage: new [app_name] [options]"
  end,
  'server' => OptionParser.new do |opts|
    opts.banner = "Usage: server [options]"
  end
}

global.order!
command = ARGV.shift
subcommands[command].order!

options[:verbose] = true if options[:verbose].nil?

case command
when 'new'
  puts "Making new Whales App:"
  app_name = ARGV.shift
  display = { verbose: options[:verbose] }
  mkdir app_name, display
  cd app_name
  touch "routes.rb", display

  File.open("routes.rb", 'w') do |f|
    f.write File.read(File.expand_path('../../template/routes.rb', __FILE__))
  end

  touch "Gemfile", display
  File.open("Gemfile", "w") do |f|
    f.write File.read(File.expand_path('../../template/Gemfile', __FILE__))
  end

  mkdir "config", display
  touch "config/database.rb", display
  File.open("config/database.rb", "w") do |f|
    f.write File.read(File.expand_path('../../template/database.rb', __FILE__))
  end

  mkdir "db", display
  touch "db/database.sql", display

  mkdir_p 'app/controllers', display

  touch "app/controllers/application_controller.rb", display
  File.open("app/controllers/application_controller.rb", "w") do |f|
    f.write File.read(File.expand_path('../../template/application_controller.rb', __FILE__))
  end

  cd 'app'
  mkdir 'models', display
  mkdir 'views', display
  mkdir 'assets', display
  cd 'assets'
  mkdir 'stylesheets'
  mkdir 'javascripts'
when "server" || "s"
  require_relative pwd + "/routes"
  require_relative "../server"
  start_server(make_router)
when 'generate' || 'g'
  type = ARGV[1]
  name = ARGV[2]

  if type == "model"
    path = "app/#{type}s/#{name.downcase}.rb"
    touch path
    File.open(path, 'w') do |f|
      f.write <<-TEXT
require 'whales_orm'
require_relative '../../config/database.rb'

class #{name.capitalize} < WhalesORM::Base
self.finalize!
end\n
      TEXT
    end
  elsif type == "controller"
    path = "app/#{type}s/#{name.downcase}_controller.rb"
    touch path
    File.open(path, 'w') do |f|
      f.write <<-TEXT
require_relative 'application_controller'

class #{name.capitalize}Controller < ApplicationController
end\n
      TEXT
    end

    mkdir "app/views/#{name.downcase}"
  end
end
#
# if ARGV.first == "db:reset"
#   DBConnection.reset
# end
